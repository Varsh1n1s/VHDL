library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity full_adder is
    Port ( A, B, Cin : in  STD_LOGIC;
           Sum, Carry : out  STD_LOGIC);
end full_adder;

architecture Behavioral of full_adder is

begin

Sum <= A xor B xor Cin;
Carry <= (A and B) or (Cin and (A or B));

end Behavioral;

//Test bench code

LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
 
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--USE ieee.numeric_std.ALL;
 
ENTITY full_adder_tb IS
END full_adder_tb;
 
ARCHITECTURE behavior OF full_adder_tb IS 
 
    -- Component Declaration for the Unit Under Test (UUT)
 
    COMPONENT full_adder
    PORT(
         A : IN  std_logic;
         B : IN  std_logic;
         Cin : IN  std_logic;
         Sum : OUT  std_logic;
         Carry : OUT  std_logic
        );
    END COMPONENT;
    

   --Inputs
   signal A : std_logic := '0';
   signal B : std_logic := '0';
   signal Cin : std_logic := '0';

 	--Outputs
   signal Sum : std_logic;
   signal Carry : std_logic;
   -- No clocks detected in port list. Replace <clock> below with 
   -- appropriate port name 

 
BEGIN
 
	-- Instantiate the Unit Under Test (UUT)
   uut: full_adder PORT MAP (
          A => A,
          B => B,
          Cin => Cin,
          Sum => Sum,
          Carry => Carry
        );

   -- Stimulus process
   stim_proc: process
   begin	
		
		A <= '0';
		B <= '0';
		Cin <= '0';
		wait for 10 ns;
		
		A <= '0';
		B <= '0';
		Cin <= '1';
		wait for 10 ns;
		
		A <= '0';
		B <= '1';
		Cin <= '0';
		wait for 10 ns;
		
		A <= '0';
		B <= '1';
		Cin <= '1';
		wait for 10 ns;
		
		A <= '1';
		B <= '0';
		Cin <= '0';
		wait for 10 ns;
		
		A <= '1';
		B <= '0';
		Cin <= '1';
		wait for 10 ns;
		
		A <= '1';
		B <= '1';
		Cin <= '0';
		wait for 10 ns;
		
		A <= '1';
		B <= '1';
		Cin <= '1';
		wait for 10 ns;
 
   end process;

END;
